version: "3"
services:
  api: # fastapi service for rapidly create robuse apis
    container_name: api_container
    build:
      context: ./services/_api
      dockerfile: api.fa.dockerfile
      network: host
      args:
        - ENVIRONMENT=${ENVIRONMENT-dev}
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/application_default_credentials.json
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT:-your_gcp_project_name}
      - POSTGRES_DB=${POSTGRES_DB:-db}
      - AUTH0_AUDIENCE=RWP0zFUGWTkvvkgu8AHvPQ3nSoAGUcWr
      - AUTH0_DOMAIN=fleet-analytics.eu.auth0.com
    ports:
      - 8000:8000
    volumes:
      - ./services/_api/src:/app
      - ~/.config/gcloud/application_default_credentials.json:/tmp/keys/application_default_credentials.json
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port ${PORT-8000} --log-level info
    # command: sh -c "while true; do sleep 1; done"

  web:
    container_name: web_container
    build:
      context: ./services/_web
      dockerfile: web.ngfb.dockerfile
      network: host
    ports:
      - 8100:8100
    volumes:
      - ./services/_web/app:/home/node/app
    # command: "ionic serve --external"
    # command: sh -c "while true; do sleep 1; done"

  lw_api:
    container_name: api
    build:
      context: ./services/lw_api
      dockerfile: lw.api.dockerfile
      network: host
      args:
        - ENVIRONMENT=${ENVIRONMENT-dev}
    # env_file:
    #   - ./services/_api/.env
    ports:
      - 8000:8000
    volumes:
      - ./services/lw_api/src:/app
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port ${PORT-8000} --log-level info
    # command: sh -c "while true; do sleep 1; done"

  mc_portal:
    container_name: mc_portal_container
    build:
      context: ./services/mc_portal
      dockerfile: mc.portal.dockerfile
      network: host
    ports:
      - 4200:4200
    volumes:
      - ./services/mc_portal/app:/home/node/app
    command: "yarn start --host 0.0.0.0"
    # command: sh -c "while true; do sleep 1; done"

  qrs_api:
    container_name: qrs_api_container
    build:
      context: ./services/qrs_api
      dockerfile: qrs.api.dockerfile
      network: host
      args:
        - ENVIRONMENT=${ENVIRONMENT-dev}
    # env_file:
    #   - ./services/qrs_api/.env
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/application_default_credentials.json
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT:-quick-desk-2}
      - POSTGRES_DB=${POSTGRES_DB:-local-db}
      - ENVIRONMENT=${ENVIRONMENT-dev}
    ports:
      - 8000:8000
    volumes:
      - ./services/qrs_api/src:/app
      - ~/.config/gcloud/application_default_credentials.json:/tmp/keys/application_default_credentials.json
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port ${PORT-8000} --log-level info
    # command: sh -c "while true; do sleep 1; done"

  qrs_web_3:
    container_name: qrs_web_3_container
    build:
      context: ./services/qrs_web_3
      dockerfile: qrs.web.3.dockerfile
      network: host
    ports:
      - 8100:8100
    volumes:
      - ./services/qrs_web_3/app:/home/node/app

  qrs_admin:
    container_name: qrs_admin_container
    build:
      context: ./services/qrs_admin
      dockerfile: qrs.admin.dockerfile
      network: host
    ports:
      - 4200:4200
    volumes:
      - ./services/qrs_admin/app:/home/node/app

  fleet_web:
    container_name: fleet_web_container
    build:
      context: ./services/fleet_web
      dockerfile: fleet.web.dockerfile
      network: host
    ports:
      - 4200:4200
    volumes:
      - ./services/fleet_web/app:/home/node/app
    command: "yarn start --host 0.0.0.0"
    # command: "ionic serve --external"
    # command: sh -c "while true; do sleep 1; done"

  qrs_web_1:
    container_name: qrs_web_1_container
    build:
      context: ./services/qrs_web_1
      dockerfile: qrs.web.1.dockerfile
      network: host
      args:
        - ENVIRONMENT=${ENVIRONMENT-dev}
        - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT-your_gcp_project_name}
    environment:
      - FLASK_APP=app/main
      - FLASK_ENV=development
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS:-/tmp/keys/application_default_credentials.json}
    ports:
      - 5000:5000
    volumes:
      - ./services/qrs_web_1/src:/app
      - ~/.config/gcloud/application_default_credentials.json:${GOOGLE_APPLICATION_CREDENTIALS:-/tmp/keys/application_default_credentials.json}
    # command: gunicorn --bind :${PORT-8080} app.main:app --workers 1 --threads 8 --timeout 0 --preload
    command: flask run --host=0.0.0.0 --port=5000
    # command: sh -c "while true; do sleep 1; done"

  fleet_flask:
    container_name: fleet_flask_container
    build:
      context: ./services/fleet_flask
      dockerfile: fleet.flask.dockerfile
    #   - ./.env
    ports:
      - 5002:5002
    environment:
      - FLASK_APP=app/main.py
      - FLASK_ENV=development
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS:-/tmp/keys/application_default_credentials.json}
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT:-your_gcp_project_name}
    volumes:
      - ./services/fleet_flask/src:/app
      - ~/.config/gcloud/application_default_credentials.json:${GOOGLE_APPLICATION_CREDENTIALS:-/tmp/keys/application_default_credentials.json}
    command: flask run --host=0.0.0.0 --port=5002

  mc_sso_api: # group SSO service for all other services
    container_name: mc_sso_api_container
    build:
      context: ./services/mc_sso_api
      dockerfile: mc.sso.api.dockerfile
      network: host
      args:
        - ENVIRONMENT=${ENVIRONMENT-dev}
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/application_default_credentials.json
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT:-gcp_project_name}
      - POSTGRES_DB=${POSTGRES_DB:-db}
    ports:
      - 8000:8000
    volumes:
      - ./services/mc_sso_api/src:/app
      - ~/.config/gcloud/application_default_credentials.json:/tmp/keys/application_default_credentials.json
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port ${PORT-8000} --log-level info

    # command: sh -c "while true; do sleep 1; done"

  mc_sso_web:
    container_name: mc_sso_web_container
    build:
      context: ./services/mc_sso_web
      dockerfile: mc.sso.web.dockerfile
      network: host
    ports:
      - 4200:4200
    volumes:
      - ./services/mc_sso_web/app:/home/node/app
    command: "yarn start --host 0.0.0.0"
    # command: "ionic serve --external"
    # command: sh -c "while true; do sleep 1; done"

  proj_wesbank_frontend:
    container_name: proj_wesbank_frontend
    build:
      context: ./services/proj_wesbank/frontend
      dockerfile: frontend.dockerfile
      network: host
    ports:
      - 4200:4200
    volumes:
      - ./services/proj_wesbank/frontend/app:/home/node/app
    command: "yarn start --host 0.0.0.0"
    # command: "ionic serve --external"
    # command: sh -c "while true; do sleep 1; done"

  ##########DEV####################
  # proj_wesbank_backend: # group SSO service for all other services
  #   container_name: proj_wesbank_backend
  #   build:
  #     context: ./services/proj_wesbank/backend
  #     dockerfile: backend.dockerfile
  #     network: host
  #     args:
  #       - ENVIRONMENT=${ENVIRONMENT-dev}
  #   environment:
  #     - GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/application_default_credentials.json
  #     - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT:-gcp_project_name}
  #     - POSTGRES_DB=${POSTGRES_DB:-db}
  #   ports:
  #     - 9000:9000
  #   volumes:
  #     - ./services/proj_wesbank/backend/src:/app
  #     - ~/.config/gcloud/application_default_credentials.json:/tmp/keys/application_default_credentials.json
  #   command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port ${PORT-9000} --log-level info
  ##########PROD####################
  proj_wesbank_backend: # group SSO service for all other services
    container_name: proj_wesbank_backend
    build:
      context: ./services/proj_wesbank/backend
      dockerfile: backend.dockerfile
      network: host
      args:
        - ENVIRONMENT=${ENVIRONMENT-dev}
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/application_default_credentials.json
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT:-gcp_project_name}
      - POSTGRES_DB=${POSTGRES_DB:-db}
      - AUTH0_AUDIENCE=RWP0zFUGWTkvvkgu8AHvPQ3nSoAGUcWr
      - AUTH0_DOMAIN=fleet-analytics.eu.auth0.com
    ports:
      - 8000:8000
    volumes:
      - ./services/proj_wesbank/backend/src:/app
      - ~/.config/gcloud/application_default_credentials.json:/tmp/keys/application_default_credentials.json
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port ${PORT-8000} --log-level info

  proj_wesbank_backend_staging: # group SSO service for all other services
    container_name: proj_wesbank_backend_staging
    build:
      context: ./services/proj_wesbank/backend
      dockerfile: backend.dockerfile
      network: host
      args:
        - ENVIRONMENT=${ENVIRONMENT-staging}
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/application_default_credentials.json
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT:-gcp_project_name}
      - POSTGRES_DB=${POSTGRES_DB:-db}
      - AUTH0_AUDIENCE=RWP0zFUGWTkvvkgu8AHvPQ3nSoAGUcWr
      - AUTH0_DOMAIN=fleet-analytics.eu.auth0.com
    ports:
      - 8005:8005
    volumes:
      - ./services/proj_wesbank/backend/src:/app
      - ~/.config/gcloud/application_default_credentials.json:/tmp/keys/application_default_credentials.json
    command: uvicorn app.main:app --workers 1 --host 0.0.0.0 --port ${PORT-8005} --log-level info

  proj_hollard_frontend:
    container_name: proj_hollard_frontend
    build:
      context: ./services/proj_hollard/frontend
      dockerfile: frontend.dockerfile
      network: host
    ports:
      - 4200:4200
    volumes:
      - ./services/proj_hollard/frontend/app:/home/node/app
    command: "yarn start --host 0.0.0.0"
    # command: "ionic serve --external"
    # command: sh -c "while true; do sleep 1; done"

    ###PROD ####
  # proj_wesbank_backend: # group SSO service for all other services
  #   container_name: proj_wesbank_backend
  #   build:
  #     context: ./services/proj_wesbank/backend
  #     dockerfile: backend.dockerfile
  #     network: host
  #     args:
  #       - ENVIRONMENT=${ENVIRONMENT-dev}
  #   environment:
  #     - GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/application_default_credentials.json
  #     - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT:-gcp_project_name}
  #     - POSTGRES_DB=${POSTGRES_DB:-db}
  #   ports:
  #     - 8000:8000
  #   volumes:
  #     - ./services/proj_wesbank/backend/src:/app
  #     - ~/.config/gcloud/application_default_credentials.json:/tmp/keys/application_default_credentials.json
  #   command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port ${PORT-8000} --log-level info

  # proj_hollard_frontend:
  #     container_name: proj_hollard_frontend
  #     build:
  #       context: ./services/proj_hollard/frontend
  #       dockerfile: frontend.dockerfile
  #       network: host
  #     ports:
  #       - 4200:4200
  #     volumes:
  #       - ./services/proj_hollard/frontend/app:/home/node/app
  #     command: "yarn start --host 0.0.0.0"
  #     # command: "ionic serve --external"
  #     # command: sh -c "while true; do sleep 1; done"

  proj_hollard_backend: # group SSO service for all other services
    container_name: proj_hollard_backend
    build:
      context: ./services/proj_hollard/backend
      dockerfile: backend.dockerfile
      network: host
      args:
        - ENVIRONMENT=${ENVIRONMENT-dev}
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/application_default_credentials.json
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT:-gcp_project_name}
      - POSTGRES_DB=${POSTGRES_DB:-db}
    ports:
      - 8001:8001
    volumes:
      - ./services/proj_hollard/backend/src:/app
      - ~/.config/gcloud/application_default_credentials.json:/tmp/keys/application_default_credentials.json
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port ${PORT-8001} --log-level info

    # command: sh -c "while true; do sleep 1; done"

  proj_ft_backend: # FuelTrack Django Backend
    container_name: proj_ft_backend
    build:
      context: ./services/proj_ft/backend
      dockerfile: backend.dockerfile
      network: host
      args:
        - ENVIRONMENT=${ENVIRONMENT-dev}
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/application_default_credentials.json
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT:-gcp_project_name}
    ports:
      - 8080:8080
    volumes:
      - ./services/proj_ft/backend/src:/app
      - ~/.config/gcloud/application_default_credentials.json:/tmp/keys/application_default_credentials.json
    # command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port ${PORT-8000} --log-level info
    command: python3 app/FTProject/manage.py runserver localhost:8080

    # command: sh -c "while true; do sleep 1; done"
